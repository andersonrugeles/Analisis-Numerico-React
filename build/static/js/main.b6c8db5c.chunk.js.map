{"version":3,"sources":["Actividad/index.tsx","Navbar/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Actividad","ecuacions","useState","metodo","setMetodo","iteraciones","setIteraciones","iteracionesR","setIteracionesR","ecuacion","iniciala","inicialb","valor","setValor","isBiseccion","setisBiseccion","isNewton","setisNewton","_absoluto","x","cambioInput","target","name","value","className","onSubmit","event","preventDefault","parse","response","a","b","p","contador","it","evaluate","index","objeto","iteracion","funcionA","funcionB","funcionP","push","alert","metodoBiseccion","parseFloat","length","valorInicial","derivative","xi1","fxi1","fxi","xi","metodoRaphson","type","placeholder","onChange","select","parseInt","selected","inicial","scope","map","Navbar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAyQeA,EA5PG,WACd,IAOIC,EAPJ,EAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAsCF,mBAAqB,IAA3D,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAwCJ,mBAAqB,IAA7D,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAwCN,mBAAqB,IAA7D,mBACA,GADA,UAC0BA,mBAAc,CAAEO,SAAU,GAAIC,SAAU,GAAIC,SAAU,MAAhF,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsCX,oBAAkB,GAAxD,mBAAOY,EAAP,KAAoBC,EAApB,KACA,EAAgCb,oBAAkB,GAAlD,mBAAOc,EAAP,KAAiBC,EAAjB,KAGMC,EAAY,SAACC,GACf,OAAIA,EAAI,GACIA,EAELA,GAqHLC,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,OACnBR,EAAS,2BAAKD,GAAN,kBAAcS,EAAOC,KAAOD,EAAOE,UAE/C,OACI,qCACI,qBAAKC,UAAU,yBAAf,SACI,uBAAMC,SAnDD,SAACC,GAGd,GAFAA,EAAMC,iBACN1B,EAAY2B,YAAMhB,EAAMH,UACT,IAAXN,EAAc,CACd,IAAM0B,EA1EU,SAACC,EAAWC,GAChC,IAAIC,EAAI,EACJC,EAAW,EAEXC,EAAoB,GACxB,GAAIjC,EAAUkC,SAAS,CAAEhB,EAAGW,IAAO7B,EAAUkC,SAAS,CAAEhB,EAAGY,IAAO,EAC9D,IAAK,IAAIK,EAAQ,EAAGA,EAAQ,IAAOA,IAAS,CAGxC,GAFAH,IACAD,GAAKF,EAAIC,GAAK,EACVb,EAAUjB,EAAUkC,SAAS,CAAEhB,EAAGa,MANlC,KAMkD,CAClD,IAAIK,EAAc,CACdC,UAAWL,EACXH,EAAGA,EACHC,EAAGA,EACHQ,SAAUtC,EAAUkC,SAAS,CAAEhB,EAAGW,IAClCU,SAAUvC,EAAUkC,SAAS,CAAEhB,EAAGY,IAClCC,EAAGA,EACHS,SAAUxC,EAAUkC,SAAS,CAAEhB,EAAGa,KAGtC,OADAE,EAAGQ,KAAKL,GACDH,EAEP,IAAIG,EAAc,CACdC,UAAWL,EACXH,EAAGA,EACHC,EAAGA,EACHQ,SAAUtC,EAAUkC,SAAS,CAAEhB,EAAGW,IAClCU,SAAUvC,EAAUkC,SAAS,CAAEhB,EAAGY,IAClCC,EAAGA,EACHS,SAAUxC,EAAUkC,SAAS,CAAEhB,EAAGa,KAQtC,GANI/B,EAAUkC,SAAS,CAAEhB,EAAGW,IAAO7B,EAAUkC,SAAS,CAAEhB,EAAGa,IAAO,IAC9DD,EAAIC,GAEJ/B,EAAUkC,SAAS,CAAEhB,EAAGa,IAAO/B,EAAUkC,SAAS,CAAEhB,EAAGY,IAAO,IAC9DD,EAAIE,GAEJA,GAAK,EAEL,YADAW,MAAM,+BAGVT,EAAGQ,KAAKL,IAiCCO,CAAgBC,WAAWjC,EAAMF,UAAWmC,WAAWjC,EAAMD,YAC9E,OAAIkB,QAAJ,IAAIA,OAAJ,EAAIA,EAAUiB,QACVxC,EAAeuB,GAEfc,MAAM,+BAGd,GAAe,IAAXxC,EAAc,CACd,IAAM0B,EAnCQ,SAACC,GAInB,IAHA,IAAIQ,EAAY,IACZL,EAAW,EACXC,EAAoB,GACjBhB,EAAUjB,EAAUkC,SAAS,CAAEhB,EAAGW,KAAQ,MAASQ,GAAa,GAAG,CACtE,IAAIS,EAAejB,EACnBA,GAAQ7B,EAAUkC,SAAS,CAAEhB,EAAGW,IAAOkB,YAAW/C,EAAW,KAAKkC,SAAS,CAAEhB,EAAGW,IAChF,IAAIO,EAAc,CACdC,UAAWL,EACXgB,IAAKF,EACLG,KAAMjD,EAAUkC,SAAS,CAAEhB,EAAG4B,IAC9BI,IAAKH,YAAW/C,EAAW,KAAKkC,SAAS,CAAEhB,EAAG4B,IAC9CK,GAAItB,GAERI,EAAGQ,KAAKL,GACRC,GAAwB,EACxBL,IAEJ,OAAOC,EAiBcmB,CAAcR,WAAWjC,EAAMF,YAChD,OAAImB,QAAJ,IAAIA,OAAJ,EAAIA,EAAUiB,QACVtC,EAAgBqB,GAEhBc,MAAM,4BAmCN,UACI,sBAAKnB,UAAU,OAAf,UACI,uBAAOA,UAAU,aAAjB,sBACA,uBACI8B,KAAK,OACL9B,UAAU,eACV+B,YAAY,qBACZjC,KAAK,WACLkC,SAAUpC,EACVG,MAAK,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAOH,cAGtB,qBAAKe,UAAU,OAAf,SACI,yBAAQA,UAAU,kCAAkC,aAAW,0BAA0BD,MAAOpB,EAAQqD,SAzCvG,SAAC9B,GAClB,IAAM+B,EAASC,SAAShC,EAAML,OAAOE,OACtB,IAAXkC,IACAxC,GAAY,GACZF,GAAe,IAEJ,IAAX0C,IACAxC,GAAY,GACZF,GAAe,IAEJ,IAAX0C,IACAxC,GAAY,GACZF,GAAe,IAEJ,IAAX0C,IACAxC,GAAY,GACZF,GAAe,IAEnBP,EAAgB,IAChBF,EAAe,IACfF,EAAUqD,IAqBM,UACI,wBAAQE,UAAQ,EAAhB,8BACA,wBAAQpC,MAAO,EAAf,uBACA,wBAAQA,MAAO,EAAf,4BACA,wBAAQA,MAAO,EAAf,oBACA,wBAAQA,MAAO,EAAf,8BAGPP,EACG,sBAAKQ,UAAU,OAAf,UACI,sBAAKA,UAAU,MAAf,UACI,uBAAOA,UAAU,aAAjB,6BACA,uBACI8B,KAAK,OACL9B,UAAU,eACV+B,YAAY,yBACZjC,KAAK,WACLkC,SAAUpC,EACVG,MAAK,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAOgD,aAGrB9C,EACG,sBAAKU,UAAU,MAAf,UACI,uBAAOA,UAAU,aAAjB,6BACA,uBACI8B,KAAK,OACL9B,UAAU,eACV+B,YAAY,yBACZjC,KAAK,WACLkC,SAAUpC,EACVG,MAAK,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAOgD,aAEb,MAER,GAEb,uBAAON,KAAK,SAAS9B,UAAU,kBAAkBD,MAAM,yBAG/D,sBAAKC,UAAU,UAAf,UACKnB,EAAYyC,OACT,8BACI,wBAAOtB,UAAU,sBAAjB,UACI,gCACI,+BACI,oBAAIqC,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,uBAGR,gCACKxD,EAAYyD,KAAI,SAACvC,GAAD,OACb,+BACI,6BAAKA,EAAMe,YACX,6BAAKf,EAAMO,IACX,6BAAKP,EAAMQ,IACX,6BAAKR,EAAMgB,WACX,6BAAKhB,EAAMiB,WACX,6BAAKjB,EAAMS,IACX,6BAAKT,EAAMkB,wBAM/B,KACHlC,EAAauC,OACV,8BACI,wBAAOtB,UAAU,sBAAjB,UACI,gCACI,+BACI,oBAAIqC,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,qBAGR,gCACKtD,EAAauD,KAAI,SAACvC,GAAD,OACd,+BACI,6BAAKA,EAAMe,YACX,6BAAKf,EAAM0B,MACX,6BAAK1B,EAAM2B,OACX,6BAAK3B,EAAM4B,MACX,6BAAK5B,EAAM6B,kBAM/B,YCxPLW,G,MARF,WACT,OACE,qBAAKvC,UAAU,SAAf,SACM,wD,MCSGwC,MATf,WACE,OACE,sBAAKxC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCKSyC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b6c8db5c.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { derivative, parse } from 'mathjs';\r\nimport './styles/Actividad.css';\r\ninterface objeto {\r\n    iteracion: 0,\r\n    a: 0,\r\n    b: 0,\r\n    funcionA: 0,\r\n    funcionB: 0,\r\n    p: 0,\r\n    funcionP: 0\r\n}\r\n\r\nconst Actividad = () => {\r\n    const [metodo, setMetodo] = useState(0);\r\n    const [iteraciones, setIteraciones] = useState<Array<any>>([]);\r\n    const [iteracionesR, setIteracionesR] = useState<Array<any>>([]);\r\n    const [iteracionesJ, setIteracionesJ] = useState<Array<any>>([]);\r\n    const [valor, setValor] = useState<any>({ ecuacion: '', iniciala: '', inicialb: '' });\r\n    const [isBiseccion, setisBiseccion] = useState<Boolean>(false);\r\n    const [isNewton, setisNewton] = useState<Boolean>(false);\r\n    let ecuacions: any;\r\n\r\n    const _absoluto = (x: any) => {\r\n        if (x < 0) {\r\n            return -x;\r\n        }\r\n        return x;\r\n    }\r\n    const metodoBiseccion = (a: number, b: number) => {\r\n        let p = 0;\r\n        let contador = 0;\r\n        let error = 0.0001;\r\n        let it: Array<objeto> = [];\r\n        if (ecuacions.evaluate({ x: a }) * ecuacions.evaluate({ x: b }) < 0) {\r\n            for (let index = 0; index < 10000; index++) {\r\n                contador++;\r\n                p = (a + b) / 2;\r\n                if (_absoluto(ecuacions.evaluate({ x: p })) <= error) {\r\n                    let objeto: any = {\r\n                        iteracion: contador,\r\n                        a: a,\r\n                        b: b,\r\n                        funcionA: ecuacions.evaluate({ x: a }),\r\n                        funcionB: ecuacions.evaluate({ x: b }),\r\n                        p: p,\r\n                        funcionP: ecuacions.evaluate({ x: p })\r\n                    }\r\n                    it.push(objeto);\r\n                    return it;\r\n                } else {\r\n                    let objeto: any = {\r\n                        iteracion: contador,\r\n                        a: a,\r\n                        b: b,\r\n                        funcionA: ecuacions.evaluate({ x: a }),\r\n                        funcionB: ecuacions.evaluate({ x: b }),\r\n                        p: p,\r\n                        funcionP: ecuacions.evaluate({ x: p })\r\n                    }\r\n                    if (ecuacions.evaluate({ x: a }) * ecuacions.evaluate({ x: p }) < 0) {\r\n                        b = p;\r\n                    }\r\n                    if (ecuacions.evaluate({ x: p }) * ecuacions.evaluate({ x: b }) < 0) {\r\n                        a = p;\r\n                    }\r\n                    if (p >= 8) {\r\n                        alert(\"Proporcione a y b adecuados\");\r\n                        return\r\n                    }\r\n                    it.push(objeto);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n    const metodoRaphson = (a: number) => {\r\n        let iteracion = 100000;\r\n        let contador = 0;\r\n        let it: Array<objeto> = [];\r\n        while (_absoluto(ecuacions.evaluate({ x: a })) > 0.001 && iteracion >= 0) {\r\n            let valorInicial = a;\r\n            a = a - ecuacions.evaluate({ x: a }) / derivative(ecuacions, 'x').evaluate({ x: a });\r\n            let objeto: any = {\r\n                iteracion: contador,\r\n                xi1: valorInicial,\r\n                fxi1: ecuacions.evaluate({ x: valorInicial }),\r\n                fxi: derivative(ecuacions, 'x').evaluate({ x: valorInicial }),\r\n                xi: a\r\n            };\r\n            it.push(objeto);\r\n            iteracion = iteracion - 1;\r\n            contador++\r\n        }\r\n        return it;\r\n    }\r\n    const metodoJacobi=(a:number,b:number,c:number)=>{\r\n        console.log(\"pendiente\")\r\n    }\r\n    const calcular = (event: any) => {\r\n        event.preventDefault();\r\n        ecuacions = parse(valor.ecuacion);\r\n        if (metodo === 1) {\r\n            const response = metodoBiseccion(parseFloat(valor.iniciala), parseFloat(valor.inicialb));\r\n            if (response?.length) {\r\n                setIteraciones(response);\r\n            } else {\r\n                alert(\"Proporcione a y b adecuados\");\r\n            }\r\n        }\r\n        if (metodo === 2) {\r\n            const response = metodoRaphson(parseFloat(valor.iniciala));\r\n            if (response?.length) {\r\n                setIteracionesR(response);\r\n            } else {\r\n                alert(\"Proporcione a adecuado\");\r\n            }\r\n        }\r\n        if(metodo===3){\r\n\r\n        }\r\n    }\r\n    const handleChange = (event: any) => {\r\n        const select = parseInt(event.target.value);\r\n        if (select === 1) {\r\n            setisNewton(true)\r\n            setisBiseccion(true)\r\n        }\r\n        if (select === 2) {\r\n            setisNewton(true)\r\n            setisBiseccion(false)\r\n        }\r\n        if (select === 3) {\r\n            setisNewton(true)\r\n            setisBiseccion(false)\r\n        }\r\n        if (select === 4) {\r\n            setisNewton(true)\r\n            setisBiseccion(false)\r\n        }\r\n        setIteracionesR([]);\r\n        setIteraciones([]);\r\n        setMetodo(select);\r\n    };\r\n    const cambioInput = ({ target }: any) => {\r\n        setValor({ ...valor, [target.name]: target.value });\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"Actividades__container\">\r\n                <form onSubmit={calcular}>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Ecuacion</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Digita la ecuacion\"\r\n                            name=\"ecuacion\"\r\n                            onChange={cambioInput}\r\n                            value={valor?.ecuacion}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\" value={metodo} onChange={handleChange}>\r\n                            <option selected>Escoge un Metodo</option>\r\n                            <option value={1}>Biseccion</option>\r\n                            <option value={2}>Newton Rapshon</option>\r\n                            <option value={3}>Jacobi</option>\r\n                            <option value={4}>Guss Seidel</option>\r\n                        </select>\r\n                    </div>\r\n                    {isNewton ?\r\n                        <div className=\"mb-3\">\r\n                            <div className=\"col\">\r\n                                <label className=\"form-label\">Valor Inicial a</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Digita valor inicial a\"\r\n                                    name=\"iniciala\"\r\n                                    onChange={cambioInput}\r\n                                    value={valor?.inicial}\r\n                                ></input>\r\n                            </div>\r\n                            {isBiseccion ?\r\n                                <div className=\"col\">\r\n                                    <label className=\"form-label\">Valor Inicial b</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Digita valor inicial b\"\r\n                                        name=\"inicialb\"\r\n                                        onChange={cambioInput}\r\n                                        value={valor?.inicial}\r\n                                    ></input>\r\n                                </div> : ''\r\n                            }\r\n                        </div> : ''\r\n                    }\r\n                    <input type=\"submit\" className=\"btn btn-success\" value=\"Calcular Metodo\"></input>\r\n                </form>\r\n            </div>\r\n            <div className='table-i'>\r\n                {iteraciones.length ? (\r\n                    <div>\r\n                        <table className=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">a</th>\r\n                                    <th scope=\"col\">b</th>\r\n                                    <th scope=\"col\">f(a)</th>\r\n                                    <th scope=\"col\">f(b)</th>\r\n                                    <th scope=\"col\">p</th>\r\n                                    <th scope=\"col\">f(p)</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {iteraciones.map((value) => (\r\n                                    <tr>\r\n                                        <th>{value.iteracion}</th>\r\n                                        <th>{value.a}</th>\r\n                                        <th>{value.b}</th>\r\n                                        <th>{value.funcionA}</th>\r\n                                        <th>{value.funcionB}</th>\r\n                                        <th>{value.p}</th>\r\n                                        <th>{value.funcionP}</th>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                ) : null}\r\n                {iteracionesR.length ? (\r\n                    <div>\r\n                        <table className=\"table table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">Xi-1</th>\r\n                                    <th scope=\"col\">f(xi-1)</th>\r\n                                    <th scope=\"col\">f'(xi-1)</th>\r\n                                    <th scope=\"col\">xi</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {iteracionesR.map((value) => (\r\n                                    <tr>\r\n                                        <th>{value.iteracion}</th>\r\n                                        <th>{value.xi1}</th>\r\n                                        <th>{value.fxi1}</th>\r\n                                        <th>{value.fxi}</th>\r\n                                        <th>{value.xi}</th>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Actividad;\r\n","import './styles/Navbar.css';\r\n\r\nconst Navbar=()=>{\r\n    return (\r\n      <div className=\"Navbar\">\r\n            <h1>Metodos Iterativos</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Navbar;\r\n","import './App.css';\nimport Actividad from './Actividad/index';\nimport Navbar from './Navbar/index';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Actividad/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}